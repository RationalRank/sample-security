apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion VersionsSdk.compiledSdk
    buildToolsVersion VersionsSdk.buildTools

    defaultConfig {
        project.ext.appName = 'sample-security'
        applicationId "pl.mobite.sample.security"
        minSdkVersion VersionsSdk.minSdk
        targetSdkVersion VersionsSdk.targetSdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            applicationIdSuffix ".debug"
            versionNameSuffix "-dev"
            resValue "string", "app_name", "$project.ext.appName-dev"
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue "string", "app_name", project.ext.appName
        }
    }

    dexOptions {
        javaMaxHeapSize "3g"
    }

    androidExtensions {
        experimental = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation DependenciesCore.kotlinStdLib
    implementation DependenciesCore.kotlinReflectLib

    implementation DependenciesCore.rxAndroidLib
    implementation DependenciesCore.rxKotlinLib
    implementation DependenciesCore.rxRelayLib

    implementation DependenciesCore.koinLib

    implementation DependenciesJetpack.androidxCoreKtx
    implementation DependenciesJetpack.androidxAppcompatLib
    implementation DependenciesJetpack.androidxVectorDrawableLib
    implementation DependenciesJetpack.androidxLegacySupportLib
    implementation DependenciesJetpack.androidxMaterialLib

    implementation DependenciesJetpack.androidxLifecycleLib
    implementation DependenciesJetpack.androidxLifecycleSavedState

    implementation DependenciesJetpack.androidxNavigationFragmentLib
    implementation DependenciesJetpack.androidxNavigationUiLib

    testImplementation DependenciesTesting.junitLib
    testImplementation DependenciesTesting.mockitoLib

    androidTestImplementation DependenciesTesting.androidxTestRunnerLib
    androidTestImplementation DependenciesTesting.espressoLib
}

task changeApkName() {
    android.applicationVariants.all { variant ->
        variant.outputs.all { output ->
            if (variant.name != "debug") {
                def date = new Date().format("yyMMdd_HHmmss")
                def fileName = "${project.ext.appName}_${variant.name}_${variant.versionName}_${date}.apk"
                output.outputFileName = fileName
            }
        }
    }
}

gradle.taskGraph.whenReady {
    changeApkName
}